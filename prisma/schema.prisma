// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  editor
  admin
}

model User {
  id Int @id @default(autoincrement())

  email String @unique
  name  String

  hash      String
  createdAt DateTime @default(now())

  firstName   String?
  lastName    String?
  fullname    String?
  phone       String?
  address     String?
  city        String?
  gender      String?
  dateOfBirth DateTime?
  height      Int?
  weight      Int?

  bookmarks Bookmark[]
  isActive  Boolean    @default(false)

  role     Role      @default(user)
  customer Customer?

  @@unique([firstName, lastName])
  @@map("users")

}

model Bookmark {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  title       String
  description String?
  link        String

  userID Int
  user   User @relation(fields: [userID], references: [id])

  @@map("bookmarks")
}

model BlacklistedToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createdAt DateTime @default(now())
}

model Customer {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  createdAt DateTime @default(now())

  // Reuse fields from User model
  email       String    @unique
  nickName    String?
  firstName   String?
  lastName    String?
  fullname    String?
  phone       String?
  address     String?
  city        String?
  gender      String?
  dateOfBirth DateTime?
  height      Int?
  weight      Int?

  @@map("customers")
}



model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  SKU         String?
  originPrice Float?
  createdAt   DateTime @default(now())
  imageUrl    String?
  rating      Float?

  category        Category? @relation(fields: [category_id], references: [id])
  category_id     Int?

  // parent_category   Category? @relation("12", fields: [parent_category_id], references: [id])
  // parent_category_id Int?

  @@map("products")
}

model Category {
  id        Int     @id @default(autoincrement())
  name      String?
  parent_category_id Int?
  parentCategory  Category?   @relation("ParentCategory", fields: [parent_category_id], references: [id])
  subcategories  Category[]  @relation("ParentCategory")

  products          Product[]

  @@map("categories")
}